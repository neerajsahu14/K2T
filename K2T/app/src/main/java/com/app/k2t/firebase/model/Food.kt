package com.app.k2t.firebase.model

import com.google.firebase.firestore.DocumentId
import com.google.firebase.firestore.ServerTimestamp
import java.util.Date


/**
 * Represents a food item in the system.
 *
 * This data class holds information about a specific food item, including its unique identifier,
 * name, details, pricing, availability, and associated media.
 *
 * @property foodId The unique identifier for this food item, generated by Firestore.
 * @property name The name of the food item.
 * @property details A nested object containing additional details about the food item.
 * @property price The price of the food item.
 * @property availability A boolean indicating whether the food item is available.
 * @property imageUrl The URL of an image representing the food item.
 * @property videoUrl The URL of a video representing the food item.
 * @property createdAt A [Date] timestamp indicating when the food item was created.
 */
data class Food(
    @DocumentId
    var foodId: String? = null, // Firestore generates this ID automatically for 'add'

    var name: String? = null, // Name of the dish
    var details: Details? = null, // Nested details object
    var price: Double? = null, // Use Double or Long for currency, avoid Float
    var availability: Boolean? = null, // Availability statusCode
    var imageUrl: String? = null, // URL for the food image
    var videoUrl: String? = null, // URL for the food video

    @ServerTimestamp
    var createdAt: Date? = null // Timestamp for when the item was created
)

/**
 * Represents additional details about a food item.
 *
 * This data class holds information such as preparation time, ingredients, and category.
 *
 * @property prepTime The preparation time for the food item.
 * @property ingredients A list of ingredients used in the food item.
 * @property category The category to which the food item belongs.
 */
data class Details(
    var prepTime: String? = null, // Preparation time
    var ingredients: List<String>? = null, // A list of ingredients
)

